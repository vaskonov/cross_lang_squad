{
    "dataset_reader": {
        "class_name": "squad_dataset_reader",
        "url": "http://files.deeppavlov.ai/datasets/squad_test/squad-en.tar.gz"
    },
    "dataset_iterator": {
        "class_name": "squad_iterator",
        "seed": 1337,
        "shuffle": true
    },
    "chainer": {
        "in": [
            "context_raw",
            "question_raw"
        ],
        "in_y": [
            "ans_raw",
            "ans_raw_start"
        ],
        "pipe": [
            {
                "class_name": "torch_squad_transformers_preprocessor",
                "vocab_file": "{TRANSFORMER}",
                "do_lower_case": "{LOWERCASE}",
                "max_seq_length": "{MAX_SEQ_LENGTH}",
                "return_tokens": true,
                "in": [
                    "question_raw",
                    "context_raw"
                ],
                "out": [
                    "bert_features",
                    "subtokens"
                ]
            },
            {
                "class_name": "squad_bert_mapping",
                "do_lower_case": "{LOWERCASE}",
                "in": [
                    "context_raw",
                    "bert_features",
                    "subtokens"
                ],
                "out": [
                    "subtok2chars",
                    "char2subtoks"
                ]
            },
            {
                "class_name": "squad_bert_ans_preprocessor",
                "do_lower_case": "{LOWERCASE}",
                "in": [
                    "ans_raw",
                    "ans_raw_start",
                    "char2subtoks"
                ],
                "out": [
                    "ans",
                    "ans_start",
                    "ans_end"
                ]
            },
            {
                "class_name": "torch_transformers_squad",
                "pretrained_bert": "{TRANSFORMER}",
                "save_path": "{MODEL_PATH}/model",
                "load_path": "{MODEL_PATH}/model",
                "optimizer": "{OPTIMIZER}",
                "min_learning_rate": 1e-06,
                "learning_rate_drop_patience": "{LEARNING_RATE_DROP_PATIENCE}",
                "learning_rate_drop_div": "{LEARNING_RATE_DROP_DIV}",
                "optimizer_parameters": {
                    "lr": 2e-05,
                    "weight_decay": 0.01,
                    "betas": [
                        0.9,
                        0.999
                    ],
                    "eps": 1e-06
                },
                "in": [
                    "bert_features"
                ],
                "in_y": [
                    "ans_start",
                    "ans_end"
                ],
                "out": [
                    "ans_start_predicted",
                    "ans_end_predicted",
                    "logits"
                ]
            },
            {
                "class_name": "squad_bert_ans_postprocessor",
                "in": [
                    "ans_start_predicted",
                    "ans_end_predicted",
                    "context_raw",
                    "bert_features",
                    "subtok2chars",
                    "subtokens"
                ],
                "out": [
                    "ans_predicted",
                    "ans_start_predicted",
                    "ans_end_predicted"
                ]
            }
        ],
        "out": [
            "ans_predicted",
            "ans_start_predicted",
            "logits"
        ]
    },
    "train": {
        "show_examples": false,
        "evaluation_targets": [
            "valid",
            "test"
        ],
        "batch_size": "{BATCH_SIZE}",
        "epochs": "{EPOCHS}",
        "log_every_n_batches": 250,
        "val_every_n_batches": 500,
        "validate_first": true,
        "validation_patience": "{VALIDATION_PATIENCE}",
        "pytest_max_batches": 2,
        "pytest_batch_size": 5,
        "metrics": [
            {
                "name": "squad_v1_f1",
                "inputs": [
                    "ans",
                    "ans_predicted"
                ]
            },
            {
                "name": "squad_v1_em",
                "inputs": [
                    "ans",
                    "ans_predicted"
                ]
            },
            {
                "name": "squad_v2_f1",
                "inputs": [
                    "ans",
                    "ans_predicted"
                ]
            },
            {
                "name": "squad_v2_em",
                "inputs": [
                    "ans",
                    "ans_predicted"
                ]
            }
        ],
        "class_name": "torch_trainer"
    },
    "metadata": {
        "variables": {
            "LOWERCASE": false,
            "PORTION": 1,
            "MBERT": "clean",
            "TYPE": "squad_test",
            "EPOCHS": 3,
            "BATCH_SIZE": 8,
            "VALIDATION_PATIENCE": 0,
            "TRANSFORMER": "bert-base-cased",
            "LANGUAGE": "en",
            "MAX_SEQ_LENGTH": 512,
            "LEARNING_RATE_DROP_PATIENCE": 0,
            "OPTIMIZER": "AdamW",
            "LEARNING_RATE_DROP_DIV": 0,
            "ROOT_PATH": "~/.deeppavlov",
            "DOWNLOADS_PATH": "{ROOT_PATH}/downloads",
            "MODELS_PATH": "{ROOT_PATH}/models",
            "MODEL_PATH": "{MODELS_PATH}/{TYPE}/{TRANSFORMER}/{LANGUAGE}/{PORTION}/{EPOCHS}/{MBERT}/{VALIDATION_PATIENCE}"
        },
        "download": [
            {
                "url": "http://files.deeppavlov.ai/0.16/squad/en-bert-base-cased.tar.gz",
                "subdir": "{ROOT_PATH}/models"
            }
        ]
    }
}
